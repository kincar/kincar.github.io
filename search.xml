<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2021/12/2947194.html"/>
      <url>/2021/12/2947194.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Markdown-基础语法"><a href="#Markdown-基础语法" class="headerlink" title="Markdown 基础语法"></a>Markdown 基础语法</h1><h2 id="一、标题（常用）"><a href="#一、标题（常用）" class="headerlink" title="一、标题（常用）"></a>一、标题（常用）</h2><p>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p><blockquote><p>注意：标准语法一般在#后跟个空格再写文字。</p></blockquote><p>示例：</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 这是一级标题</span><span class="token comment" spellcheck="true">## 这是二级标题</span><span class="token comment" spellcheck="true">### 这是三级标题</span><span class="token comment" spellcheck="true">#### 这是四级标题</span><span class="token comment" spellcheck="true">##### 这是五级标题</span><span class="token comment" spellcheck="true">###### 这是六级标题</span></code></pre><p>效果如下：</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h2 id="二、字体（常用）"><a href="#二、字体（常用）" class="headerlink" title="二、字体（常用）"></a>二、字体（常用）</h2><ul><li><strong>加粗：</strong></li></ul><p>要加粗的文字左右分别用两个*号包起来</p><ul><li><em>斜体：</em></li></ul><p>要倾斜的文字左右分别用一个*号包起来</p><ul><li><strong><em>斜体加粗：</em></strong></li></ul><p>要倾斜和加粗的文字分别用三个*号包起来</p><ul><li><del>删除线：</del></li></ul><p>要加删除线的问女子左右分别用两个~~号包起来</p><p>示例：</p><pre class=" language-bash"><code class="language-bash">**我是加粗的文字***我是倾斜的文字****我是斜体加粗的文字***~~我是加删除线的文字~~</code></pre><p>效果如下：</p><p><strong>我是加粗的文字</strong></p><p><em>我是倾斜的文字</em></p><p><strong><em>我是斜体加粗的文字</em></strong></p><p><del>我是加删除线的文字</del></p><h2 id="三、引用（常用）"><a href="#三、引用（常用）" class="headerlink" title="三、引用（常用）"></a>三、引用（常用）</h2><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;n 个…，<br>貌似可以一直加，但没神马乱用</p><p>示例：</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">></span> 一盏灯， 一片昏黄； 一简书， 一杯淡茶。<span class="token operator">>></span> 守着那一份淡定， 品读属于自己的寂寞。<span class="token operator">>></span><span class="token operator">></span>  保持淡定， 才能欣赏到最美丽的风景！<span class="token operator">>></span><span class="token operator">>></span> 保持淡定， 人生从此不再寂寞。</code></pre><p>效果如下：</p><blockquote><p>一盏灯， 一片昏黄； 一简书， 一杯淡茶。</p><blockquote><p>守着那一份淡定， 品读属于自己的寂寞。</p><blockquote><p>保持淡定， 才能欣赏到最美丽的风景！</p><blockquote><p>保持淡定， 人生从此不再寂寞。</p></blockquote></blockquote></blockquote></blockquote><h2 id="四、分割线"><a href="#四、分割线" class="headerlink" title="四、分割线"></a>四、分割线</h2><p>三个或者三个以上的-或者*都可以</p><p>示例：</p><pre class=" language-bash"><code class="language-bash">-------*******</code></pre><p>效果如下：</p><hr><hr><hr><hr><h2 id="五、图片（常用）"><a href="#五、图片（常用）" class="headerlink" title="五、图片（常用）"></a>五、图片（常用）</h2><pre class=" language-bash"><code class="language-bash"><span class="token operator">!</span><span class="token punctuation">[</span>图片alt<span class="token punctuation">]</span><span class="token punctuation">(</span>图片地址 <span class="token string">"图片title"</span><span class="token punctuation">)</span></code></pre><p>图片 alt 就是显示在图片下面的文字，相当于对图片内容的解释<br>图片 title 是图片的标题，当鼠标移到图片上时显示的内容。title 可加可不加</p><p>示例：</p><pre class=" language-bash"><code class="language-bash"><span class="token operator">!</span><span class="token punctuation">[</span>blockchain<span class="token punctuation">]</span><span class="token punctuation">(</span>https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u<span class="token operator">=</span>702257389,1274025419<span class="token operator">&amp;</span>fm<span class="token operator">=</span>27<span class="token operator">&amp;</span>gp<span class="token operator">=</span>0.jpg <span class="token string">"区块链"</span><span class="token punctuation">)</span></code></pre><p>效果如下：</p><p><img src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&fm=27&gp=0.jpg" alt="blockchain" title="区块链"></p><p><strong>上传本地图片直接点击导航栏的图片标志，选择图片即可</strong></p><p>markdown 格式追求的是简单、多平台统一。name 图片的存储就是一个问题，需要用图床，提供统一的外链，这样就不用在不同的平台去处理图片的问题了。才能做到书写一次，各处使用。</p><p>关于图床的选择，可以看看这一篇文章：<br><a href="https://www.jianshu.com/p/ea1eb11db63f">markdown 图床</a></p><h2 id="六、超链接（常用）"><a href="#六、超链接（常用）" class="headerlink" title="六、超链接（常用）"></a>六、超链接（常用）</h2><p>语法：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>超链接<span class="token punctuation">]</span><span class="token punctuation">(</span>超链接地址 <span class="token string">"超链接title"</span><span class="token punctuation">)</span></code></pre><p>title 可加可不加</p><p>示例：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>简书<span class="token punctuation">]</span><span class="token punctuation">(</span>http://jianshu.com<span class="token punctuation">)</span><span class="token punctuation">[</span>百度<span class="token punctuation">]</span><span class="token punctuation">(</span>http://baidu.com<span class="token punctuation">)</span></code></pre><p>效果如下：</p><p><a href="http://jianshu.com/">简书</a></p><p><a href="http://baidu.com/">百度</a></p><blockquote><p>注意：Markdown 本身语法不支持链接在新页面中打开，貌似简书做了处理，是可以的。别的平台可能就不行了，如果想要在新页面中打开的话可以用 html 语言的 a 标签代替</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"超链接地址"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">></span>超链接名<span class="token operator">&lt;</span>/a<span class="token operator">></span>示例：<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"https://www.jianshu.com/u/1f5ac0cf6a8b"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">></span>简书<span class="token operator">&lt;</span>/a<span class="token operator">></span></code></pre><p>效果如下：<br><a href="https://www.jianshu.com/u/1f5ac0cf6a8b" target="_blank">简书</a></p><h2 id="七、列表（常用）"><a href="#七、列表（常用）" class="headerlink" title="七、列表（常用）"></a>七、列表（常用）</h2><p><strong>无序列表</strong></p><p>语法：</p><p>无序列表用 - + * 任何一种都可以</p><pre class=" language-bash"><code class="language-bash">    - 列表内容    + 类表内容    * 列表内容</code></pre><blockquote><p>注意：-+*跟内容之间都要有一个空格</p></blockquote><p>效果如下：</p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><p><strong>有序列表</strong></p><p>语法：</p><p>数字加点</p><pre class=" language-bash"><code class="language-bash">    1. 列表内容    2. 列表内容    3. 列表内容</code></pre><blockquote><p>注意：序号跟内容之间要有空格</p></blockquote><p>效果如下：</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><p><strong>列表嵌套</strong></p><p>上一级和下一级之间敲三个空格即可</p><ul><li><p>一级无序列表</p><ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li><li><p>一级无序列表</p><ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ul><ol><li><p>一级有序列表</p><ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li><li><p>一级有序列表</p><ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ol><h2 id="八、表格（常用）"><a href="#八、表格（常用）" class="headerlink" title="八、表格（常用）"></a>八、表格（常用）</h2><p>语法：</p><pre class=" language-bash"><code class="language-bash">表头<span class="token operator">|</span>表头<span class="token operator">|</span>表头---<span class="token operator">|</span>:---:<span class="token operator">|</span>---:内容<span class="token operator">|</span>内容<span class="token operator">|</span>内容内容<span class="token operator">|</span>内容<span class="token operator">|</span>内容</code></pre><p>第二行分割表头和内容<br>有一个就行，为了对齐，多加了几个<br>文字默认居左 -两边加：表示文字居中 -右边加：表示文字居右</p><blockquote><p>注意：原生的语法两边都要用|包起来。此处省略</p></blockquote><p>示例：</p><pre class=" language-bash"><code class="language-bash">    姓名<span class="token operator">|</span>技能<span class="token operator">|</span>排行    --<span class="token operator">|</span>:--:<span class="token operator">|</span>--:    刘备<span class="token operator">|</span>哭<span class="token operator">|</span>大哥    关羽<span class="token operator">|</span>打<span class="token operator">|</span>二哥    张飞<span class="token operator">|</span>骂<span class="token operator">|</span>三弟</code></pre><p>效果如下：</p><table><thead><tr><th>姓名</th><th align="center">技能</th><th align="right">排行</th></tr></thead><tbody><tr><td>刘备</td><td align="center">哭</td><td align="right">大哥</td></tr><tr><td>关羽</td><td align="center">打</td><td align="right">二哥</td></tr><tr><td>张飞</td><td align="center">骂</td><td align="right">三弟</td></tr></tbody></table><h2 id="九、代码（常用）"><a href="#九、代码（常用）" class="headerlink" title="九、代码（常用）"></a>九、代码（常用）</h2><p>语法：</p><p>单行代码（只有一段，不分行）：代码之间分别用一个反引号`包起来</p><pre class=" language-bash"><code class="language-bash"><span class="token variable"><span class="token variable">`</span>代码内容<span class="token variable">`</span></span></code></pre><p>代码块（多行）：代码之间分别用三个反引号```包起来，并且两边的反引号单独占一行</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">(</span>``<span class="token variable"><span class="token variable">`</span><span class="token punctuation">)</span>    代码<span class="token punctuation">..</span>.    代码<span class="token punctuation">..</span>.    代码<span class="token punctuation">..</span>.<span class="token punctuation">(</span><span class="token variable">`</span></span>``<span class="token punctuation">)</span></code></pre><blockquote><p>注意：为了防止转义，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可</p></blockquote><p>示例：</p><p>单行代码</p><pre class=" language-bash"><code class="language-bash"><span class="token variable"><span class="token variable">`</span>create Vue Demo<span class="token variable">`</span></span></code></pre><p>代码块</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">(</span>```<span class="token punctuation">)</span>    <span class="token keyword">function</span> fun<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">'这是一段牛逼的代码'</span>    <span class="token punctuation">}</span>    fun<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>```<span class="token punctuation">)</span></code></pre><p>效果如下：</p><p>单行代码</p><p><code>create Vue Demo</code></p><p>代码块</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">function</span> fun<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">echo</span> <span class="token string">'这是一段牛逼的代码'</span><span class="token punctuation">}</span>fun<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo基本用法</title>
      <link href="/2021/12/2816107.html"/>
      <url>/2021/12/2816107.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
